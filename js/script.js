import { TELEGRAM_CONFIG } from './config.js';

document.addEventListener('DOMContentLoaded', function() {
    // –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Telegram –±–æ—Ç–∞
    const TELEGRAM_BOT_TOKEN = TELEGRAM_CONFIG.BOT_TOKEN; 
    
    // –ú–∞—Å—Å–∏–≤ chat_id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–º –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è
    const TELEGRAM_CHAT_IDS = TELEGRAM_CONFIG.CHAT_IDS;
    
    // –≠–ª–µ–º–µ–Ω—Ç—ã –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    const modal = document.getElementById('orderModal');
    const orderForm = document.getElementById('orderForm');
    const closeModal = document.getElementById('closeModal');
    const modalMessage = document.getElementById('modalMessage');
    const orderCallBtn = document.getElementById('orderCallBtn');
    const heroOrderBtn = document.getElementById('heroOrderBtn');
    const ctaOrderBtn = document.getElementById('ctaOrderBtn');
    const modalService = document.getElementById('modalService');
    const selectedServiceInput = document.getElementById('selectedServiceInput');

    const mobileMenuBtn = document.querySelector('.mobile-menu-btn');
    const mobileMenu = document.querySelector('.mobile-menu');
    const mobileMenuLinks = document.querySelectorAll('.mobile-menu a');

    if (mobileMenuBtn && mobileMenu) {
        mobileMenuBtn.addEventListener('click', function() {
            mobileMenu.classList.toggle('active');
            this.textContent = mobileMenu.classList.contains('active') ? '‚úï' : '‚ò∞';
        });
        
        // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–µ–Ω—é –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ —Å—Å—ã–ª–∫—É
        mobileMenuLinks.forEach(link => {
            link.addEventListener('click', function() {
                mobileMenu.classList.remove('active');
                mobileMenuBtn.textContent = '‚ò∞';
            });
        });
        
        // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–µ–Ω—é –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –µ–≥–æ –æ–±–ª–∞—Å—Ç–∏
        document.addEventListener('click', function(event) {
            if (!event.target.closest('.header-content') && mobileMenu.classList.contains('active')) {
                mobileMenu.classList.remove('active');
                mobileMenuBtn.textContent = '‚ò∞';
            }
        });
    }

    // –î–æ–±–∞–≤–ª—è–µ–º data-–∞—Ç—Ä–∏–±—É—Ç—ã –∫ –∫–∞—Ä—Ç–æ—á–∫–∞–º —É—Å–ª—É–≥
    const serviceCards = document.querySelectorAll('.services-card');
    const serviceMapping = {
        'profHighRiseCeiling': '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –≤—ã—Å–æ—Ç–Ω—ã–π –∫–ª–∏–Ω–∏–Ω–≥ –ø–æ—Ç–æ–ª–æ—á–Ω–æ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞ –ª—é–±–æ–π —Å–ª–æ–∂–Ω–æ—Å—Ç–∏.',
        'highRiseCleanOfWindow': '–í—ã—Å–æ—Ç–Ω–∞—è –º–æ–π–∫–∞ –æ–∫–æ–Ω –∏ —Ñ–∞—Å–∞–¥–æ–≤ –∑–¥–∞–Ω–∏–π.',
        'postConstruction': '–ü–æ—Å–ª–µ—Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω–∞—è —É–±–æ—Ä–∫–∞',
        'industrialPremises': '–£–±–æ—Ä–∫–∞ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∏ –Ω–µ–ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω—ã—Ö –ø–æ–º–µ—â–µ–Ω–∏–π.',
        'deepCleaning': '–ì–ª—É–±–æ–∫–∞—è —á–∏—Å—Ç–∫–∞ –Ω–∞–ø–æ–ª—å–Ω—ã—Ö –ø–æ–∫—Ä—ã—Ç–∏–π —Å –ø–æ–º–æ—â—å—é —Ä–æ—Ç–æ—Ä–Ω–æ–≥–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è.',
        'profDry': '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è —Ö–∏–º—á–∏—Å—Ç–∫–∞ –Ω–∞–ø–æ–ª—å–Ω—ã—Ö –ø–æ–∫—Ä—ã—Ç–∏–π –∏ –º—è–≥–∫–æ–π –º–µ–±–µ–ª–∏',
        'generalCleaning': '–ì–µ–Ω–µ—Ä–∞–ª—å–Ω–∞—è —É–±–æ—Ä–∫–∞ –æ—Ñ–∏—Å–æ–≤, –∫–æ—Ç—Ç–µ–¥–∂–µ–π.',
        'eventsCleaninig': '–£–±–æ—Ä–∫–∞ –Ω–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è—Ö.',
        'profCleanBoats': '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –∫–ª–∏–Ω–∏–Ω–≥ –∫–∞—Ç–µ—Ä–æ–≤, –ª–æ–¥–æ–∫, —è—Ö—Ç.',
        'generalFitnessSpa': '–ì–µ–Ω–µ—Ä–∞–ª—å–Ω–∞—è —É–±–æ—Ä–∫–∞ Fitness, Wellness, SPA —Ü–µ–Ω—Ç—Ä–æ–≤.',
        'cleanGarage': '–£–±–æ—Ä–∫–∞ –≥–∞—Ä–∞–∂–µ–π'
    };

    //–î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–ª–∏–∫–æ–≤ –Ω–∞ –∫–∞—Ä—Ç–æ—á–∫–∏ —É—Å–ª—É–≥
    serviceCards.forEach((card, index) => {
        const serviceKeys = Object.keys(serviceMapping);
        if (index < serviceKeys.length) {
            const serviceKey = serviceKeys[index];
            card.setAttribute('data-service', serviceKey);
            
            card.addEventListener('click', function() {
                const serviceValue = this.getAttribute('data-service');
                openModalWithService(serviceValue);
            });
            
            // –î–æ–±–∞–≤–ª—è–µ–º –∫—É—Ä—Å–æ—Ä pointer –¥–ª—è –∫–∞—Ä—Ç–æ—á–µ–∫
            card.style.cursor = 'pointer';
        }
    });

    // –§—É–Ω–∫—Ü–∏—è –æ—Ç–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Å –≤—ã–±—Ä–∞–Ω–Ω–æ–π —É—Å–ª—É–≥–æ–π
    function openModalWithService(serviceValue) {
        openModal();
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é —É—Å–ª—É–≥—É –≤ select
        if (modalService && serviceValue) {
            modalService.value = serviceValue;
            selectedServiceInput.value = serviceValue;
        }
    }

    
    // –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    function openModal() {
        modal.style.display = 'block';
        document.body.style.overflow = 'hidden';
    }
    
    // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    function closeModalWindow() {
        modal.style.display = 'none';
        document.body.style.overflow = 'auto';
        orderForm.reset();
        modalMessage.style.display = 'none';
    }
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –æ—Ç–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    if (orderCallBtn) orderCallBtn.addEventListener('click', openModal);
    if (heroOrderBtn) heroOrderBtn.addEventListener('click', openModal);
    if (ctaOrderBtn) ctaOrderBtn.addEventListener('click', openModal);
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    if (closeModal) closeModal.addEventListener('click', closeModalWindow);
    
    // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –µ–≥–æ
    window.addEventListener('click', function(event) {
        if (event.target === modal) {
            closeModalWindow();
        }
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤—ã–±–æ—Ä–∞ —É—Å–ª—É–≥–∏
    if (modalService) {
        modalService.addEventListener('change', function() {
            if (selectedServiceInput) {
                selectedServiceInput.value = this.value;
            }
        });
    }
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
    if (orderForm) {
        orderForm.addEventListener('submit', async function(e) {
            e.preventDefault();
            
            // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã
            const formData = new FormData(orderForm);
            const name = formData.get('name');
            const phone = formData.get('phone');
            const time = formData.get('time');
            const service = formData.get('service');
            const message = formData.get('message');
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω—ã
            if (!name || !phone) {
                showModalMessage('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è', 'error');
                return;
            }
            
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω–∞
            if (!isValidPhone(phone)) {
                showModalMessage('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞', 'error');
                return;
            }
            
            // –ë–ª–æ–∫–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É –æ—Ç–ø—Ä–∞–≤–∫–∏
            const submitBtn = orderForm.querySelector('button[type="submit"]');
            const originalText = submitBtn.textContent;
            submitBtn.disabled = true;
            submitBtn.textContent = '–û—Ç–ø—Ä–∞–≤–∫–∞...';
            
            try {
                // –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è Telegram
                const timeText = time ? `\nüï∞Ô∏è *–£–¥–æ–±–Ω–æ–µ –≤—Ä–µ–º—è –¥–ª—è —Å–≤—è–∑–∏:* ${getComfortTime(time)}` : '';
                const serviceText = service ? `\nüè∑Ô∏è *–£—Å–ª—É–≥–∞:* ${getServiceName(service)}` : '';
                const messageText = message ? `\nüí¨ *–°–æ–æ–±—â–µ–Ω–∏–µ:* ${message}` : '';
                
                const telegramMessage = `
                        üßπ *–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ —É–±–æ—Ä–∫—É*
                                        
üë§ *–ò–º—è:* ${name}
üìû *–¢–µ–ª–µ—Ñ–æ–Ω:* ${phone}

${timeText}${serviceText}${messageText}

‚è∞ *–í—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏:* ${new Date().toLocaleString('ru-RU')}
                `;
                
                // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –∏–∑ –º–∞—Å—Å–∏–≤–∞
                const results = await sendToMultipleTelegram(telegramMessage);
                
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ—Ç–ø—Ä–∞–≤–∫–∏
                const successfulSends = results.filter(result => result.success).length;
                const failedSends = results.filter(result => !result.success).length;
                
                if (successfulSends > 0) {
                    showModalMessage(`–ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!${failedSends > 0 ? ` –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å ${failedSends} –ø–æ–ª—É—á–∞—Ç–µ–ª—è–º.` : ''}`, 'success');
                    orderForm.reset();
                    
                    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–∫—Ä—ã—Ç–∏–µ —Ñ–æ—Ä–º—ã —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
                    setTimeout(closeModalWindow, 3000);
                } else {
                    showModalMessage('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞—è–≤–∫–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.', 'error');
                }
            } catch (error) {
                // –û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –∏–ª–∏ –¥—Ä—É–≥–∞—è –æ—à–∏–±–∫–∞
                console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏:', error);
                showModalMessage('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞—è–≤–∫–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.', 'error');
            } finally {
                // –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É –æ—Ç–ø—Ä–∞–≤–∫–∏
                submitBtn.disabled = false;
                submitBtn.textContent = originalText;
            }
        });
    }
    
    // –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–µ—Å–∫–æ–ª—å–∫–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –≤ Telegram
    async function sendToMultipleTelegram(message) {
        const results = [];
        
        for (const chatId of TELEGRAM_CHAT_IDS) {
            try {
                const response = await sendToTelegram(message, chatId);
                results.push({
                    success: response.ok,
                    chatId: chatId,
                    error: response.ok ? null : response.description
                });
                
                // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–¥–µ—Ä–∂–∫—É –º–µ–∂–¥—É –æ—Ç–ø—Ä–∞–≤–∫–∞–º–∏ (1 —Å–µ–∫—É–Ω–¥–∞)
                await new Promise(resolve => setTimeout(resolve, 1000));
            } catch (error) {
                results.push({
                    success: false,
                    chatId: chatId,
                    error: error.message
                });
            }
        }
        
        return results;
    }
    
    // –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ chat_id
    async function sendToTelegram(message, chatId) {
        const url = `https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage`;
        
        const data = {
            chat_id: chatId,
            text: message,
            parse_mode: 'Markdown'
        };
        
        const response = await fetch(url, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(data)
        });
        
        return await response.json();
    }
    
    // –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
    function isValidPhone(phone) {
        const phoneRegex = /^(\+7|8)[\s\-]?\(?\d{3}\)?[\s\-]?\d{3}[\s\-]?\d{2}[\s\-]?\d{2}$/;
        return phoneRegex.test(phone);
    }

    // –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è —É—Å–ª—É–≥–∏
    function getServiceName(serviceKey) {
        const services = {
            'profHighRiseCeiling': '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –≤—ã—Å–æ—Ç–Ω—ã–π –∫–ª–∏–Ω–∏–Ω–≥ –ø–æ—Ç–æ–ª–æ—á–Ω–æ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞ –ª—é–±–æ–π —Å–ª–æ–∂–Ω–æ—Å—Ç–∏.',
            'highRiseCleanOfWindow': '–í—ã—Å–æ—Ç–Ω–∞—è –º–æ–π–∫–∞ –æ–∫–æ–Ω –∏ —Ñ–∞—Å–∞–¥–æ–≤ –∑–¥–∞–Ω–∏–π.',
            'postConstruction': '–ü–æ—Å–ª–µ—Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω–∞—è —É–±–æ—Ä–∫–∞',
            'industrialPremises': '–£–±–æ—Ä–∫–∞ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∏ –Ω–µ–ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω—ã—Ö –ø–æ–º–µ—â–µ–Ω–∏–π.',
            'deepCleaning': '–ì–ª—É–±–æ–∫–∞—è —á–∏—Å—Ç–∫–∞ –Ω–∞–ø–æ–ª—å–Ω—ã—Ö –ø–æ–∫—Ä—ã—Ç–∏–π —Å –ø–æ–º–æ—â—å—é —Ä–æ—Ç–æ—Ä–Ω–æ–≥–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è.',
            'profDry': '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è —Ö–∏–º—á–∏—Å—Ç–∫–∞ –Ω–∞–ø–æ–ª—å–Ω—ã—Ö –ø–æ–∫—Ä—ã—Ç–∏–π –∏ –º—è–≥–∫–æ–π –º–µ–±–µ–ª–∏',
            'generalCleaning': '–ì–µ–Ω–µ—Ä–∞–ª—å–Ω–∞—è —É–±–æ—Ä–∫–∞ –æ—Ñ–∏—Å–æ–≤, –∫–æ—Ç—Ç–µ–¥–∂–µ–π.',
            'eventsCleaninig': '–£–±–æ—Ä–∫–∞ –Ω–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è—Ö.',
            'profCleanBoats': '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –∫–ª–∏–Ω–∏–Ω–≥ –∫–∞—Ç–µ—Ä–æ–≤, –ª–æ–¥–æ–∫, —è—Ö—Ç.',
            'generalFitnessSpa': '–ì–µ–Ω–µ—Ä–∞–ª—å–Ω–∞—è —É–±–æ—Ä–∫–∞ Fitness, Wellness, SPA —Ü–µ–Ω—Ç—Ä–æ–≤.',
            'cleanGarage': '–£–±–æ—Ä–∫–∞ –≥–∞—Ä–∞–∂–µ–π'
        };
        return services[serviceKey] || serviceKey;
    }

    // –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è —É–¥–æ–±–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –∑–≤–æ–Ω–∫–∞
    function getComfortTime(timeKey) {
        const times = {
            'at6to7': '—Å 6:00 –¥–æ 7:00',
            'at7to8': '—Å 7:00 –¥–æ 8:00',
            'at8to9': '—Å 8:00 –¥–æ 9:00',
            'at9to10': '—Å 9:00 –¥–æ 10:00',
            'at10to11': '—Å 10:00 –¥–æ 11:00',
            'at11to12': '—Å 11:00 –¥–æ 12:00',
            'at12to13': '—Å 12:00 –¥–æ 13:00',
            'at13to14': '—Å 13:00 –¥–æ 14:00',
            'at14to15': '—Å 14:00 –¥–æ 15:00',
            'at15to16': '—Å 15:00 –¥–æ 16:00',
            'at16to17': '—Å 16:00 –¥–æ 17:00',
            'at17to18': '—Å 17:00 –¥–æ 18:00',
            'at18to19': '—Å 18:00 –¥–æ 19:00',
            'at19to20': '—Å 19:00 –¥–æ 20:00',
            'at20to21': '—Å 20:00 –¥–æ 21:00',
            'at21to22': '—Å 21:00 –¥–æ 22:00',
            'at22to23': '—Å 22:00 –¥–æ 23:00',
            'at23to24': '—Å 23:00 –¥–æ 24:00',
        };
        return times[timeKey] || timeKey;
    }
    
    // –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ
    function showModalMessage(text, type) {
        modalMessage.textContent = text;
        modalMessage.className = 'form-message ' + type;
        modalMessage.style.display = 'block';
    }
    
    // –ü–ª–∞–≤–Ω–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –¥–ª—è —è–∫–æ—Ä–Ω—ã—Ö —Å—Å—ã–ª–æ–∫
    document.querySelectorAll('a[href^="#"]').forEach(anchor => {
        anchor.addEventListener('click', function (e) {
            e.preventDefault();
            
            const targetId = this.getAttribute('href');
            if (targetId === '#') return;
            
            const targetElement = document.querySelector(targetId);
            if (targetElement) {
                window.scrollTo({
                    top: targetElement.offsetTop - 80,
                    behavior: 'smooth'
                });
            }
        });
    });
    
    // –ü–æ–¥—Å–≤–µ—Ç–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –ø—É–Ω–∫—Ç–∞ –º–µ–Ω—é –ø—Ä–∏ –ø—Ä–æ–∫—Ä—É—Ç–∫–µ
    const sections = document.querySelectorAll('section');
    const navLinks = document.querySelectorAll('nav a');
    
    window.addEventListener('scroll', function() {
        let current = '';
        
        sections.forEach(section => {
            const sectionTop = section.offsetTop;
            const sectionHeight = section.clientHeight;
            
            if (pageYOffset >= (sectionTop - 100)) {
                current = section.getAttribute('id');
            }
        });
        
        navLinks.forEach(link => {
            link.classList.remove('active');
            if (link.getAttribute('href').includes(current)) {
                link.classList.add('active');
            }
        });
    });
});